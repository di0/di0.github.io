<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Developer's Lab]]></title>
  <link href="http://di0.github.io/atom.xml" rel="self"/>
  <link href="http://di0.github.io/"/>
  <updated>2018-04-30T02:59:24-03:00</updated>
  <id>http://di0.github.io/</id>
  <author>
    <name><![CDATA[Diogo Pinto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Grep Command Show Only File Name]]></title>
    <link href="http://di0.github.io/blog/2018/04/30/grep-command-show-only-file-name/"/>
    <updated>2018-04-30T00:48:26-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/30/grep-command-show-only-file-name</id>
    <content type="html"><![CDATA[<p>With <strong>grep</strong> and <strong>cut</strong> delimiter command we can get only file name where the occurrence of the input match. Bellow an<!--more-->
example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grep -Rn <span class="s2">&quot;foo&quot;</span> * <span class="p">|</span> cut -f1 -d:
</span></code></pre></td></tr></table></div></figure>


<p><strong>output</strong></p>

<p><img class="rigth" src="http://di0.github.io/images/output_grep_cut.jpeg" width="1800" height="1800" title="'output grep'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Replace With Stream Editor(AKA Sed)]]></title>
    <link href="http://di0.github.io/blog/2018/04/28/replace-with-stream-editor-aka-sed/"/>
    <updated>2018-04-28T14:08:18-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/28/replace-with-stream-editor-aka-sed</id>
    <content type="html"><![CDATA[<p>The <strong>sed</strong> is command-line utility editor, which filtering and transforming text. Bellow an example of how works <!--more--> replacement order:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -i <span class="s1">&#39;s/input/replacement/g&#39;</span> some_file
</span></code></pre></td></tr></table></div></figure>


<p><em>where:</em></p>

<p><li> <strong> <em>i</em> </strong> = &ndash;in-place, edit <strong>file.txt</strong> and save it.</li>
<li> <strong> <em>s</em> </strong> = substitute statement.</li>
<li> <strong> <em>input</em> </strong> = original match case.</li>
<li> <strong> <em>replacement</em> </strong> = matched replacement it with.</li>
<li> <strong> <em>g</em> </strong> = global(replace all occurrence, instead of first occurrence).</li>
<li> <strong> <em>some_file</em> </strong> = some target file.</li></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capturing Groups Regex With Perl]]></title>
    <link href="http://di0.github.io/blog/2018/01/31/capturing-groups-regex-with-perl/"/>
    <updated>2018-01-31T20:46:12-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/31/capturing-groups-regex-with-perl</id>
    <content type="html"><![CDATA[<p>Capturing groups in regular expression, against a scalar type, it&rsquo;s possible when you use the variable <!--more--> number, such as $1, $2, $3&hellip;, for example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;Enter your name and lastname here&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nb">chop</span> <span class="p">(</span> <span class="nv">$name_and_lastname</span> <span class="o">=</span> <span class="sr">&lt;STDIN&gt;</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span> <span class="nv">$name_and_lastname</span> <span class="o">=~</span><span class="sr"> /^\s*(\S+)\s+(\S+)\s*$/</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&quot;Hello $1. Your lastname: $2.&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&quot;no result&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Searching Exact Word With Vi Editor]]></title>
    <link href="http://di0.github.io/blog/2018/01/31/searching-exact-word-with-vi-editor/"/>
    <updated>2018-01-31T15:41:24-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/31/searching-exact-word-with-vi-editor</id>
    <content type="html"><![CDATA[<p>Below I explain you how search an exact word in VI(M), what you just need to do, is to put there on between <!--more--> regular expression
\&lt; and \>, for example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/<span class="se">\&lt;</span>FOO<span class="se">\&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>It will match only words whose name is <strong>FOO</strong>, rather than, <strong>FOOBAR</strong>, <strong>BARFOO</strong>, etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Determining Symbolic Links Java With Update-alternatives Command]]></title>
    <link href="http://di0.github.io/blog/2018/01/17/determining-symbolic-links-java-with-update-alternatives-command/"/>
    <updated>2018-01-17T16:01:01-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/17/determining-symbolic-links-java-with-update-alternatives-command</id>
    <content type="html"><![CDATA[<p>With the utility <strong>update-alternatives</strong>, is possible you set versions of the Java installed in your Operating System Linux(which supports it),
without need add or <!--more--> remove symbolic link manually. To list one or more Java version available in target system, you can just typing the
command <strong>update-alternatives</strong>, adding the argument <strong>--list</strong>, together with name of the symlink(Symbolic Link) desired. For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>update-alternatives --list java
</span></code></pre></td></tr></table></div></figure>


<p>Where <strong>java</strong> is the name of the symbolic link.</p>

<p>Is possible too, you to install a new version, case it hasn&rsquo;t on the list of the <strong>update-alternatives</strong>. To install a new version of the Java on the
list, you just need use the parameter <strong>--install</strong>, setting the following arguments:</p>

<pre><code>1) The value properly of the desired symbolic link name.
2) The full path of the binary Java.
3) Lastly, specifying the level of priority associated with it.
</code></pre>

<p>For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>update-alternatives --install /usr/bin/java java /opt/jdk1.8/bin/java 1
</span></code></pre></td></tr></table></div></figure>


<p>After typing the command above, you can use the parameter <strong>--list</strong> to confirm the update:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>update-alternatives --list java
</span></code></pre></td></tr></table></div></figure>


<p>To change to a new version, execute <strong>update-alternatives</strong> with parameter <strong>--config</strong>, it will show a menu to you choice your option through
interactive way form:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>update-alternatives --config java
</span></code></pre></td></tr></table></div></figure>


<p>There is another non-interactive way to you choice the version, just setting with parameter <strong>--set</strong> or <strong>-s</strong>, instead of <strong>--config</strong>, as below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo update-alternatives --set java /opt/jdk1.8/bin/java
</span></code></pre></td></tr></table></div></figure>


<p>For more info, enter with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>man update-alternatives
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL - Searching for Distinct Fields]]></title>
    <link href="http://di0.github.io/blog/2018/01/07/searching-for-distinct-fields/"/>
    <updated>2018-01-07T21:42:23-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/07/searching-for-distinct-fields</id>
    <content type="html"><![CDATA[<p>When you haven&rsquo;t idea where one or more columns name are available, you can search them on all table of the database, using <!--more--> the following clause:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="k">TABLE_NAME</span>
</span><span class='line'>    <span class="k">FROM</span> <span class="n">INFORMATION_SCHEMA</span><span class="p">.</span><span class="n">COLUMNS</span>
</span><span class='line'>    <span class="k">WHERE</span> <span class="k">COLUMN_NAME</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">&#39;COLUMN_NAME_DESIRED&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">AND</span> <span class="n">TABLE_SCHEMA</span><span class="o">=</span><span class="s1">&#39;DATABASE_TARGET&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Where <strong>COLUMN_NAME_DESIRED</strong> is the name of the column to be searched and <strong>DATABASE_TARGET</strong> is the database where it must be searched.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MultiThreading - Future in Java]]></title>
    <link href="http://di0.github.io/blog/2017/11/06/multithreading-future-in-java/"/>
    <updated>2017-11-06T02:32:36-02:00</updated>
    <id>http://di0.github.io/blog/2017/11/06/multithreading-future-in-java</id>
    <content type="html"><![CDATA[<p>Ao realizar tarefas concorrentes em Java, desde as primeiras versões, tem-se disponível a <!--more--> interface Runnable, responsabilizando a quem vai
utilizá-la, a implementação de um único método chamado run().</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Runnable</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como observado acima através de sua a assinatura, não há uma maneira de recuperar o valor de uma operação ou ainda, nem mesmo é possível
lançar uma exceção.</p>

<p>Para casos em que há tarefas que devolvem informações, será necessário o auxílio de um método ou uma propriedade compartilhada para recuperar
armazenar o valor desejado após a execução de uma tarefa.</p>

<p>Conforme exemplo abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">Foo</span> <span class="kd">implements</span> <span class="n">Runnable</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="n">String</span> <span class="n">operation</span> <span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="n">String</span> <span class="nf">getOperation</span><span class="o">()</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>             <span class="k">return</span> <span class="n">operation</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Stuff</span>
</span><span class='line'>            <span class="n">operation</span> <span class="o">=</span> <span class="n">operation</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Não há problema algum com o uso do exemplo acima, contudo, existe uma solução mais adequada e viável para esse caso, através da
utilização da interface nomeada Callable.</p>

<p>Callable é uma interface que foi disponibilizada na versão J2SE 5.0, ela oferece um método
chamado call(). Através desse método, agora é possível recuperar valores retornados do tipo Object, ou mais
especificamente, qualquer tipo devido à sua construção genericamente parametrizada.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Callable</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>     <span class="n">V</span> <span class="nf">call</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pelo fato de não ser possível trabalhar com Callable com auxílio da classe Thread, a qual implementa apenas
Runnable, é usado ao invés disso, o suporte da interface ExecutorService para executar objetos do tipo Callable.</p>

<p>Através de ExecutorService, é utilizada o método submit, que aceita como parâmetro um Callable e retorna uma
interface Future, responsável por disponibilizar resultados através de operações assíncronas, a assinatura do
método submit é descrito abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Future</span> <span class="nf">submit</span><span class="o">(</span> <span class="n">Callable</span> <span class="n">task</span> <span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Quando uma tarefa é executada através de Callable, sendo ela “submitada”, pelo método submit(), é retornado a
interface Future e, através dela, é usado o método get, para recuperar os valores processados.</p>

<p>O método get é mutuamente excluído, até que a tarefa termine, semântica idêntica ao Join da classe Thread.</p>

<p>Uma demonstração do uso de Callable é exibido no código seguinte. Esse teste se baseia em um processo se
dividir em duas linhas de execuções, e realizar a incrementação do valor e exibi-lo logo em seguida. Por exemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.Callable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.ExecutorService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.Executors</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.Future</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Foo</span> <span class="kd">implements</span> <span class="n">Callable</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="n">Integer</span> <span class="nf">call</span><span class="o">()</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                        <span class="n">value</span><span class="o">++;</span>
</span><span class='line'>                        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">600</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">catch</span> <span class="o">(</span> <span class="n">InterruptedException</span> <span class="n">e</span> <span class="o">)</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                        <span class="c1">// stuff</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">return</span> <span class="n">value</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span> <span class="n">String</span><span class="o">[]</span> <span class="n">args</span> <span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>                <span class="n">ExecutorService</span> <span class="n">s</span> <span class="o">=</span> <span class="n">Executors</span><span class="o">.</span><span class="na">newFixedThreadPool</span><span class="o">(</span> <span class="mi">1</span> <span class="o">);</span>
</span><span class='line'>                <span class="n">Callable</span> <span class="n">c1</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Foo</span><span class="o">();</span>
</span><span class='line'>                <span class="n">Callable</span> <span class="n">c2</span> <span class="o">=</span> <span class="n">c1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">for</span> <span class="o">(</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="o">;</span> <span class="n">count</span><span class="o">++</span> <span class="o">)</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                        <span class="n">Future</span> <span class="n">f1</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span> <span class="n">c1</span> <span class="o">);</span>
</span><span class='line'>                        <span class="n">Future</span> <span class="n">f2</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span> <span class="n">c2</span> <span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                        <span class="n">Integer</span> <span class="n">i1</span> <span class="o">=</span> <span class="n">f1</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'>                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="n">i1</span> <span class="o">+</span> <span class="s">&quot; -&gt; Executed by c1 reference&quot;</span> <span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                        <span class="n">Integer</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">f2</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'>                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="n">i2</span> <span class="o">+</span> <span class="s">&quot; -&gt; Executed by c2 reference&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">s</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>No trecho de código acima, na linhas 25 é utilizado o método estático newFixedThreadPool(), da classe Executors. Esse método
cria uma espécie de mina de Threads, e diz a quantidade de tarefas que serão executadas a um
determinado momento. O argumento 1, diz que apenas uma Thread executará por vez.</p>

<p>Na linha 26, a variável c1 referencia um objeto que tem Callable a serem executados e na linha seguinte, uma outra
variável(c2) referencia a mesma instância, para que seja possível demonstrar duas linhas de execuções, atuando na mesma tarefa.</p>

<p>No loop, as duas threads serão “submitadas” e executadas e seus valores recuperadas pelo método get() da
interface Future e, no fim do loop, o serviço executor é finalizado com método shutdown(), o resultado da operação será:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="m">1</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">2</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">3</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">4</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">5</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">6</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">7</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">8</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">9</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">10</span> -&gt; Executed by c2 reference
</span></code></pre></td></tr></table></div></figure>


<p>De acordo o que foi passado para o método Executors.newFixedThreadPool( 1 ), apenas uma linha foi
executada por tarefa. Caso o parâmetro seja alterado para 2, a saída será algo como:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="m">2</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">2</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">4</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">4</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">6</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">6</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">8</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">8</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">10</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">10</span> -&gt; Executed by c2 reference
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Jetty Plugin With Maven and ActiveMQ]]></title>
    <link href="http://di0.github.io/blog/2017/11/06/maven/"/>
    <updated>2017-11-06T00:36:41-02:00</updated>
    <id>http://di0.github.io/blog/2017/11/06/maven</id>
    <content type="html"><![CDATA[<h3>Configurando plugin Jetty</h3>

<p>We can use and configure the Jetty plugin through Maven tool, for this, is need we add on pom.xml file, the following <!--more--> entries:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;</span>
</span><span class='line'> <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>org.mortbay.jetty<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>jetty-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>7.6.8.v20121106<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;scanIntervalSeconds&gt;</span>10<span class="nt">&lt;/scanIntervalSeconds&gt;</span>
</span><span class='line'>          <span class="nt">&lt;webApp&gt;</span>
</span><span class='line'>            <span class="nt">&lt;contextPath&gt;</span>/test<span class="nt">&lt;/contextPath&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/webApp&gt;</span>
</span><span class='line'>          <span class="nt">&lt;webAppConfig&gt;</span>
</span><span class='line'>            <span class="nt">&lt;jettyEnvXml&gt;</span>
</span><span class='line'>                  src/main/webapp/WEB-INF/jetty-env.xml
</span><span class='line'>            <span class="nt">&lt;/jettyEnvXml&gt;</span>
</span><span class='line'>            <span class="nt">&lt;webXml&gt;</span>
</span><span class='line'>                  src/main/webapp/WEB-INF/web.xml
</span><span class='line'>            <span class="nt">&lt;/webXml&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/webAppConfig&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'> <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Acima, além de adicionar o plugin a ser ativado, foi adicionado também, as configurações que serão lidas pelo WebContext.</p>

<h3>Adicionando dependências dos artefatos para o ActiveMQ</h3>

<p>Para o ActiveMQ, é necessário adicionar a entrada abaixo do core, que será utilizada como <!--more-->
dependência:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;dependency&gt;
</span><span class='line'>       &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;
</span><span class='line'>       &lt;artifactId&gt;activemq-core&lt;/artifactId&gt;
</span><span class='line'>       &lt;version&gt;5.0.0&lt;/version&gt;
</span><span class='line'>&lt;/dependency&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Essa entrada apenas disponibilizará as bibliotecas necessárias para criar as conexões e sessões.</p>

<p>Instalando binários do ActiveMQ
Para instalar os binários do ActiveMQ:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://activemq.apache.org/path/tofile/apache-activemq-x.x.x-bin.tar.gz
</span><span class='line'><span class="nb">cd</span> <span class="o">[</span>diretorio_instalacao<span class="o">]</span>
</span><span class='line'>tar zxvf activemq-x.x.x-bin.tar.gz
</span></code></pre></td></tr></table></div></figure>


<p>Iniciando ActiveMQ
Para iniciar o daemon após instalação:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> <span class="o">[</span>diretorio_instalacao<span class="o">]</span>/bin
</span><span class='line'>./activemq start
</span></code></pre></td></tr></table></div></figure>


<p>Para acessar o painel de administrador:</p>

<p><a href="http://127.0.0.1:8161/admin/">http://127.0.0.1:8161/admin/</a></p>

<p>Configurando recursos JNDI para o Jetty
No caminho especificado nas configurações do Plugin do Jetty, no arquivo pom, é necessário configurar os recursos do JNDI para o específico webapp, exemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;!DOCTYPE Configure PUBLIC &quot;-//Mort Bay Consulting//DTD Configure//EN&quot;</span>
</span><span class='line'><span class="cp">&quot;http://jetty.mortbay.org/configure.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;Configure</span> <span class="na">id=</span><span class="s">&#39;jms-webapp-wac&#39;</span> <span class="na">class=</span><span class="s">&quot;org.eclipse.jetty.webapp.WebAppContext&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;New</span> <span class="na">id=</span><span class="s">&quot;connectionFactory&quot;</span> <span class="na">class=</span><span class="s">&quot;org.eclipse.jetty.plus.jndi.Resource&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Ref</span> <span class="na">id=</span><span class="s">&#39;jms-webapp-wac&#39;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>jms/ConnectionFactory<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>tcp://127.0.0.1:61616<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/New&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/New&gt;</span>
</span><span class='line'>  <span class="nt">&lt;New</span> <span class="na">id=</span><span class="s">&quot;fooQueue&quot;</span> <span class="na">class=</span><span class="s">&quot;org.eclipse.jetty.plus.jndi.Resource&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>jms/FooQueue<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.command.ActiveMQQueue&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>FOO.QUEUE<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/New&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/New&gt;</span>
</span><span class='line'><span class="nt">&lt;/Configure&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Onde:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>tcp://127.0.0.1:61616<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'><span class="nt">&lt;/New&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deve ser o IP e porta onde o daemon do ActiveMQ está escutando.</p>

<p>E onde:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.command.ActiveMQQueue&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>FOO.QUEUE<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'><span class="nt">&lt;/New&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>É a fila configurada no painel ou linha de comando do ActiveMQ.</p>

<p>Mapeando os recursos do ActiveMQ dentro do Container
No arquivo de configuração web.xml, dentro do <strong>WEB-INF</strong> da aplicação, deverá ser mapeado referências para
utilização do ActiveMQ:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resource-ref</span> <span class="na">id=</span><span class="s">&quot;ResourceRef_1291169365479&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;description&gt;</span>JMS Connection<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-ref-name&gt;</span>jms/ConnectionFactory<span class="nt">&lt;/res-ref-name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-type&gt;</span>javax.jms.ConnectionFactory<span class="nt">&lt;/res-type&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-auth&gt;</span>Container<span class="nt">&lt;/res-auth&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-sharing-scope&gt;</span>Shareable<span class="nt">&lt;/res-sharing-scope&gt;</span>
</span><span class='line'><span class="nt">&lt;/resource-ref&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;message-destination-ref&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-ref-name&gt;</span>jms/FooQueue<span class="nt">&lt;/message-destination-ref-name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-type&gt;</span>javax.jms.Queue<span class="nt">&lt;/message-destination-type&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-usage&gt;</span>Produces<span class="nt">&lt;/message-destination-usage&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-link&gt;</span>jms/FooQueue<span class="nt">&lt;/message-destination-link&gt;</span>
</span><span class='line'><span class="nt">&lt;/message-destination-ref&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git - Revert Specific Files]]></title>
    <link href="http://di0.github.io/blog/2017/10/20/git-revert-specific-files/"/>
    <updated>2017-10-20T22:12:50-02:00</updated>
    <id>http://di0.github.io/blog/2017/10/20/git-revert-specific-files</id>
    <content type="html"><![CDATA[<p>Assumindo hipoteticamente que o hash para qual deseja reverter um ou mais arquivos é <strong>cf762e4c187b</strong>.</p>

<p>O comando abaixo irá reverter os arquivos foo1.txt e foo2.txt para o <!--more--> hash informado:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout cf762e4c187b -- dir/foo1.txt dir/foo2.txt
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN - Getting Revision Since the First Copy]]></title>
    <link href="http://di0.github.io/blog/2016/11/01/svn-getting-revision-since-the-first-copy/"/>
    <updated>2016-11-01T23:27:11-02:00</updated>
    <id>http://di0.github.io/blog/2016/11/01/svn-getting-revision-since-the-first-copy</id>
    <content type="html"><![CDATA[<p>Para obter o primeiro commit de onde foi <!--more--> criada a branch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svn log --stop-on-copy
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grep - Exclude Directories and Files From Recursive Searches]]></title>
    <link href="http://di0.github.io/blog/2016/08/21/grep-exclude-directories-and-files-from-recursive-searches/"/>
    <updated>2016-08-21T04:17:15-03:00</updated>
    <id>http://di0.github.io/blog/2016/08/21/grep-exclude-directories-and-files-from-recursive-searches</id>
    <content type="html"><![CDATA[<p>Simplesmente, usando o parâmetro <strong>--exclude-dir</strong> para excluir <!--more--> diretórios
e/ou <strong>--exclude</strong> para excluir arquivos ou extensões de arquivos, tal como exemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grep -r <span class="o">[</span>Win<span class="o">]</span> --color --exclude-dir<span class="o">=</span><span class="nb">test</span> --exclude-dir<span class="o">=</span>target <span class="se">\</span>
</span><span class='line'>--exclude-dir<span class="o">=</span>bin --exclude<span class="o">=</span><span class="se">\*</span>.xml --exclude<span class="o">=</span><span class="se">\*</span>.svn <span class="s2">&quot;pesquisa&quot;</span> .
</span></code></pre></td></tr></table></div></figure>


<p>Ou ainda:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>grep -r <span class="o">[</span>Win<span class="o">]</span> --color --exclude-dir<span class="o">={</span><span class="nb">test</span>,target,bin<span class="o">}</span> <span class="se">\</span>
</span><span class='line'>--exclude<span class="o">={</span>*.xml,*.svn<span class="o">}</span> <span class="s2">&quot;pesquisa&quot;</span> .
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove Names Duplicates With Sort Command]]></title>
    <link href="http://di0.github.io/blog/2016/05/20/remove-names-duplicates-with-sort-command/"/>
    <updated>2016-05-20T19:37:51-03:00</updated>
    <id>http://di0.github.io/blog/2016/05/20/remove-names-duplicates-with-sort-command</id>
    <content type="html"><![CDATA[<p>É possível remover nomes duplicados de uma saída padrão com o utilitário <!--more--> <strong>sort</strong>. Exemplos:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sort -u foo.txt
</span></code></pre></td></tr></table></div></figure>


<p>ou</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sort file.txt <span class="p">|</span> uniq
</span></code></pre></td></tr></table></div></figure>


<p>É possível também, imprimir somente os valores repetidos, em vez de ocultá-los, segue:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sort file.txt <span class="p">|</span> uniq -d
</span></code></pre></td></tr></table></div></figure>


<p>Uma outra forma de realizar a mesma tarefa que faz o comando <strong>sort</strong> é a de usar o comando
<strong>awk</strong>, conforme exemplo abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>awk <span class="s1">&#39;!a[$0]++&#39;</span> foo.txt
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prevent SSH Connection Time Out]]></title>
    <link href="http://di0.github.io/blog/2016/02/24/avoid-ssh-connection-timeout/"/>
    <updated>2016-02-24T01:36:18-03:00</updated>
    <id>http://di0.github.io/blog/2016/02/24/avoid-ssh-connection-timeout</id>
    <content type="html"><![CDATA[<p>Conexões estabelecidas de clientes SSHs, são automaticamente desconectadas do servidor SSH quando um <!--more--> tempo limite de conexão é alcançado, como mostrado pela mensagem abaixo:</p>

<p><strong> <em>Read from remote host foo.com: Connection reset by peer</em> </strong>
<strong> <em>Connection to foo.com closed.</em> </strong></p>

<p>Para evitar que o cliente perca conexão com o servidor SSH, por timeout, uma das soluções abaixo são avaliadas:</p>

<p><del>Configuração no servidor</del></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>TCPKeepAlive no
</span><span class='line'>ClientAliveInterval 30
</span><span class='line'>ClientAliveCountMax 100
</span></code></pre></td></tr></table></div></figure>


<p><strong>TPCKeepAlive ( KeepAlive )</strong>, verifica se deve ou não, realizar a verificação se o Socket via cliente e servidor, ainda encontra-se
aberto. Um pacote cru, é enviado e se for recebido, significa que a conexão ainda ativa. A opção padrão para a maioria dos caso, é “YES”.</p>

<p><strong>ClientAliveInterval</strong> Numero do intervalo em segundos em que o servidor, irá enviar um pacote nulo, conforme descrito
anteriormente, ao cliente. O padrão para a maioria dos casos, é zero.</p>

<p><strong>ClientAliveCountMax 100</strong> Número máximo de vezes, que será enviado o pacote antes de desconectar do cliente. O padrão para a maioria dos casos, são três.</p>

<p>Reiniciando o servidor para aplicar as configurações modificadas:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service sshd restart
</span></code></pre></td></tr></table></div></figure>


<p><del>Configuração no Cliente</del></p>

<p>Se acaso, não for <!--more--> possível realizar os procedimentos anteriores no servidor, devido a permissão, no lado do cliente, é possível realizar o seguinte procedimento:</p>

<p>Se para todos os usuários do sistema, adicionar aqui</p>

<p><strong> /etc/ssh/ssh_config </strong></p>

<p>Ou para um usuário específico, adicionar aqui</p>

<p><strong> ~/.ssh/config </strong></p>

<p>A seguinte configuração:</p>

<p><strong>ServerAliveInterval 30</strong></p>

<p>Configuração no cliente – linha de comando
E por fim, a outra opção, seria a manual, via linha de comando, através da opção (-o)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh -o <span class="nv">ServerAliveInterval</span><span class="o">=</span><span class="m">30</span> user@foo.com
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reset All Commits From Repository Git]]></title>
    <link href="http://di0.github.io/blog/2015/09/23/reset-all-commits-from-repository-git/"/>
    <updated>2015-09-23T23:26:40-03:00</updated>
    <id>http://di0.github.io/blog/2015/09/23/reset-all-commits-from-repository-git</id>
    <content type="html"><![CDATA[<p>Para remover todos os históricos de commits e iniciar novamente o commit inicial, são dados os seguintes <!--more--> passos:</p>

<p>1) Remover o .git do repositorio(local) que deseja resetar</br>
2) Recriar o artefato do banco de dados git, seguindo os passos abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>Project
</span><span class='line'><span class="nv">$ </span>git init
</span><span class='line'>// crie alguns arquivos <span class="o">(</span> eu clonei <span class="k">do</span> SVN, em vez disso <span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Initial commit&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3) Realizar o push para o servidor remoto<strong>(troque a url pela url do repositorio alvo)</strong>, forçando a sobreescrita:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote add origin &lt;url&gt;
</span><span class='line'><span class="nv">$ </span>git push ‐‐force ‐‐set-upstream origin master
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ERROR: SERVER CERTIFICATE VERIFICATION FAILED]]></title>
    <link href="http://di0.github.io/blog/2015/09/23/error-server-certificate-verification-failed/"/>
    <updated>2015-09-23T02:05:40-03:00</updated>
    <id>http://di0.github.io/blog/2015/09/23/error-server-certificate-verification-failed</id>
    <content type="html"><![CDATA[<!--more-->


<p>No momento do clone:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://develdio.com/SourceCode.git
</span></code></pre></td></tr></table></div></figure>


<p>Foi obtido o seguinte erro:</p>

<p><strong> Cloning into ‘SourceCode’… </strong></p>

<p><strong> fatal: unable to access &lsquo;<a href="https://develdio.com/SourceCode.git/">https://develdio.com/SourceCode.git/</a>&rsquo;: server certificate verification failed. </strong>
<strong> CAfile: /etc/ssl/certs/ca-certificates.crt CRLfile: none </strong></p>

<p>A falha ocorre devido o certificado não ser confiado.</p>

<p>Para solucionar o problema através utilitário do git na linha de comando, basta executar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config --global http.sslverify <span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Status With Grep]]></title>
    <link href="http://di0.github.io/blog/2015/05/15/git-status-with-grep/"/>
    <updated>2015-05-15T02:36:05-03:00</updated>
    <id>http://di0.github.io/blog/2015/05/15/git-status-with-grep</id>
    <content type="html"><![CDATA[<p>Para manter as cores na saída padrão, ao usar o comando <strong>git status</strong> junto aos
utilitários <strong>grep</strong>, <strong>less</strong> ou <strong>more</strong>, <!--more--> basta adicionar a opção <strong>-c color-status=always</strong> ao
executar o comando <strong>git status</strong>. Por exemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git -c color.status<span class="o">=</span>always status <span class="p">|</span> grep -i <span class="s2">&quot;alguma coisa&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Observe na sintaxe do comando, o argumento <strong>-c color.status=always</strong> vem antes do argumento <strong>status</strong>.
Do contrário, um erro ocorrerá.</p>

<p>Para os comandos <strong>git diff</strong>, <strong>git show</strong> ou <strong>git log</strong>, a sintaxe é a mesma, exceto que, a
variável utilizada dessa vez é a <strong>color.ui</strong>, como exemplo abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git -c color.ui<span class="o">=</span>always log <span class="p">|</span> grep -i -B <span class="m">2</span> -A <span class="m">3</span> <span class="s2">&quot;alguma coisa&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NMAP - Searching Open Ports Into Specific Network]]></title>
    <link href="http://di0.github.io/blog/2014/07/08/nmap-searching-open-ports-into-specific-network/"/>
    <updated>2014-07-08T20:12:26-03:00</updated>
    <id>http://di0.github.io/blog/2014/07/08/nmap-searching-open-ports-into-specific-network</id>
    <content type="html"><![CDATA[<p>Exemplo abaixo, busca por todas conexões SSHs em um range de IP da rede<!--more--> local especificada:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>nmap -p22 192.168.0.0/24 -oG - <span class="p">|</span> grep 22/open
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changing a Commit Message in SVN]]></title>
    <link href="http://di0.github.io/blog/2014/05/15/changing-a-commit-message-in-svn/"/>
    <updated>2014-05-15T01:50:04-03:00</updated>
    <id>http://di0.github.io/blog/2014/05/15/changing-a-commit-message-in-svn</id>
    <content type="html"><![CDATA[<p>Desde que esteja habilitado pelo administrador do servidor SVN, há ao menos duas maneiras de modificar as mensagens <!--more--> previamentes comitadas no SVN:</p>

<p>A primeira modifica a mensagem remotamente, com uma das duas formas:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>svn propedit -r N --revprop svn:log URL
</span><span class='line'><span class="nv">$ </span>svn propset -r N --revprop svn:log <span class="s2">&quot;nova mensagem&quot;</span> <span class="o">[</span>URL <span class="k">do</span> Repositório<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Onde <strong>N</strong> é o número da revisão</p>

<p>A segunda apenas modifica a mensagem localmente através do utilitário svnadmin:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>svnadmin setlog <span class="o">[</span>PATH <span class="k">do</span> Repositório<span class="o">]</span> -r N Arquivo
</span></code></pre></td></tr></table></div></figure>


<p>Onde <strong>N</strong> é o número da revisão</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compress File With Git Diff Output]]></title>
    <link href="http://di0.github.io/blog/2014/04/24/compress-file-with-git-diff-output/"/>
    <updated>2014-04-24T03:00:14-03:00</updated>
    <id>http://di0.github.io/blog/2014/04/24/compress-file-with-git-diff-output</id>
    <content type="html"><![CDATA[<p>O comando abaixo demonstra como compactar um arquivo no formato tar, com arquivos
que foram modificados são exibidos na <!--more--> saída comando git diff. Por exemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git diff --name-only <span class="p">|</span> xargs tar czf new-files.tar.gz
</span></code></pre></td></tr></table></div></figure>


<p>Isso criará um arquivo compactado com um ou mais arquivo retornado pelo <strong>git diff &ndash;name-only</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Searching for Table Name]]></title>
    <link href="http://di0.github.io/blog/2013/05/13/searching-for-table-name/"/>
    <updated>2013-05-13T20:30:04-03:00</updated>
    <id>http://di0.github.io/blog/2013/05/13/searching-for-table-name</id>
    <content type="html"><![CDATA[<p>No MySQL, tais informações metadatas, estão armazenadas na tabela <strong>database_name</strong>, portanto,
um simples <!--more--> <strong>SHOW TABLES</strong> nessa tabela, filtrando pelo nome da tabela desejada. Segue:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SHOW</span> <span class="n">TABLES</span> <span class="k">FROM</span> <span class="n">database_name</span> <span class="k">LIKE</span> <span class="ss">&quot;%table_name%&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
