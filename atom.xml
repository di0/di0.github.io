<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dio's Blog]]></title>
  <link href="http://di0.github.io/atom.xml" rel="self"/>
  <link href="http://di0.github.io/"/>
  <updated>2017-11-09T01:07:41-02:00</updated>
  <id>http://di0.github.io/</id>
  <author>
    <name><![CDATA[Diogo Pinto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MultiThreading - Future in Java]]></title>
    <link href="http://di0.github.io/blog/2017/11/06/multithreading-future-in-java/"/>
    <updated>2017-11-06T02:32:36-02:00</updated>
    <id>http://di0.github.io/blog/2017/11/06/multithreading-future-in-java</id>
    <content type="html"><![CDATA[<p>Ao realizar tarefas concorrentes em Java, desde as primeiras versões, tem-se disponível a interface Runnable, responsabilizando a quem vai
utilizá-la, a implementação de um único método chamado run().</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Runnable</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como observado acima através de sua a assinatura, não há uma maneira de recuperar o valor de uma operação ou ainda, nem mesmo é possível
lançar uma exceção.</p>

<p>Para casos em que há tarefas que <!--more--> devolvem informações, será necessário o auxílio de um método ou uma propriedade compartilhada para recuperar
armazenar o valor desejado após a execução de uma tarefa.</p>

<p>Conforme exemplo abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">Foo</span> <span class="kd">implements</span> <span class="n">Runnable</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="n">String</span> <span class="n">operation</span> <span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="n">String</span> <span class="nf">getOperation</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>             <span class="k">return</span> <span class="n">operation</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Stuff</span>
</span><span class='line'>            <span class="n">operation</span> <span class="o">=</span> <span class="n">operation</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Não há problema algum com o uso do exemplo acima, contudo, existe uma solução mais adequada e viável para esse caso, através da
utilização da interface nomeada Callable.</p>

<p>Callable é uma interface que foi disponibilizada na versão J2SE 5.0, ela oferece um método
chamado call(). Através desse método, agora é possível recuperar valores retornados do tipo Object, ou mais
especificamente, qualquer tipo devido à sua construção genericamente parametrizada.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Callable</span> <span class="o">{</span>
</span><span class='line'>     <span class="n">V</span> <span class="nf">call</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pelo fato de não ser possível trabalhar com Callable com auxílio da classe Thread, a qual implementa apenas
Runnable, é usado ao invés disso, o suporte da interface ExecutorService para executar objetos do tipo Callable.</p>

<p>Através de ExecutorService, é utilizada o método submit, que aceita como parâmetro um Callable e retorna uma
interface Future, responsável por disponibilizar resultados através de operações assíncronas, a assinatura do
método submit é descrito abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Future</span> <span class="nf">submit</span><span class="o">(</span> <span class="n">Callable</span> <span class="n">task</span> <span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Quando uma tarefa é executada através de Callable, sendo ela “submitada”, pelo método submit(), é retornado a
interface Future e, através dela, é usado o método get, para recuperar os valores processados.</p>

<p>O método get é mutuamente excluído, até que a tarefa termine, semântica idêntica ao Join da classe Thread.</p>

<p>Uma demonstração do uso de Callable é exibido no código seguinte. Esse teste se baseia em um processo se
dividir em duas linhas de execuções, e realizar a incrementação do valor e exibi-lo logo em seguida. Por exemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.Callable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.ExecutorService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.Executors</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.Future</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Foo</span> <span class="kd">implements</span> <span class="n">Callable</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="n">Integer</span> <span class="nf">call</span><span class="o">()</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                        <span class="n">value</span><span class="o">++;</span>
</span><span class='line'>                        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">600</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">catch</span> <span class="o">(</span> <span class="n">InterruptedException</span> <span class="n">e</span> <span class="o">)</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                        <span class="c1">// stuff</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">return</span> <span class="n">value</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span> <span class="n">String</span><span class="o">[]</span> <span class="n">args</span> <span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>                <span class="n">ExecutorService</span> <span class="n">s</span> <span class="o">=</span> <span class="n">Executors</span><span class="o">.</span><span class="na">newFixedThreadPool</span><span class="o">(</span> <span class="mi">1</span> <span class="o">);</span>
</span><span class='line'>                <span class="n">Callable</span> <span class="n">c1</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Foo</span><span class="o">();</span>
</span><span class='line'>                <span class="n">Callable</span> <span class="n">c2</span> <span class="o">=</span> <span class="n">c1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">for</span> <span class="o">(</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="o">;</span> <span class="n">count</span><span class="o">++</span> <span class="o">)</span>
</span><span class='line'>                <span class="o">{</span>
</span><span class='line'>                        <span class="n">Future</span> <span class="n">f1</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span> <span class="n">c1</span> <span class="o">);</span>
</span><span class='line'>                        <span class="n">Future</span> <span class="n">f2</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span> <span class="n">c2</span> <span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                        <span class="n">Integer</span> <span class="n">i1</span> <span class="o">=</span> <span class="n">f1</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'>                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="n">i1</span> <span class="o">+</span> <span class="s">&quot; -&gt; Executed by c1 reference&quot;</span> <span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                        <span class="n">Integer</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">f2</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'>                        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="n">i2</span> <span class="o">+</span> <span class="s">&quot; -&gt; Executed by c2 reference&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">s</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>No trecho de código acima, na linhas 25 é utilizado o método estático newFixedThreadPool(), da classe Executors. Esse método
cria uma espécie de mina de Threads, e diz a quantidade de tarefas que serão executadas a um
determinado momento. O argumento 1, diz que apenas uma Thread executará por vez.</p>

<p>Na linha 26, a variável c1 referencia um objeto que tem Callable a serem executados e na linha seguinte, uma outra
variável(c2) referencia a mesma instância, para que seja possível demonstrar duas linhas de execuções, atuando na mesma tarefa.</p>

<p>No loop, as duas threads serão “submitadas” e executadas e seus valores recuperadas pelo método get() da
interface Future e, no fim do loop, o serviço executor é finalizado com método shutdown(), o resultado da operação será:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="m">1</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">2</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">3</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">4</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">5</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">6</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">7</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">8</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">9</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">10</span> -&gt; Executed by c2 reference
</span></code></pre></td></tr></table></div></figure>


<p>De acordo o que foi passado para o método Executors.newFixedThreadPool( 1 ), apenas uma linha foi
executada por tarefa. Caso o parâmetro seja alterado para 2, a saída será algo como:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="m">2</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">2</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">4</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">4</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">6</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">6</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">8</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">8</span> -&gt; Executed by c2 reference
</span><span class='line'><span class="m">10</span> -&gt; Executed by c1 reference
</span><span class='line'><span class="m">10</span> -&gt; Executed by c2 reference
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Jetty Plugin With Maven and ActiveMQ]]></title>
    <link href="http://di0.github.io/blog/2017/11/06/maven/"/>
    <updated>2017-11-06T00:36:41-02:00</updated>
    <id>http://di0.github.io/blog/2017/11/06/maven</id>
    <content type="html"><![CDATA[<h3>Configurando plugin Jetty</h3>

<p>Para utilizar e configurar o plugin do Jetty através do Maven, é necessário adicionar no pom.xml as seguintes entradas:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>     <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.mortbay.jetty<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>jetty-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>7.6.8.v20121106<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>        <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>           <span class="nt">&lt;scanIntervalSeconds&gt;</span>10<span class="nt">&lt;/scanIntervalSeconds&gt;</span>
</span><span class='line'>           <span class="nt">&lt;webApp&gt;</span>
</span><span class='line'>              <span class="nt">&lt;contextPath&gt;</span>/test<span class="nt">&lt;/contextPath&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/webApp&gt;</span>
</span><span class='line'>                 <span class="nt">&lt;webAppConfig&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;jettyEnvXml&gt;</span>src/main/webapp/WEB-INF/jetty-env.xml<span class="nt">&lt;/jettyEnvXml&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;webXml&gt;</span>src/main/webapp/WEB-INF/web.xml<span class="nt">&lt;/webXml&gt;</span>
</span><span class='line'>                 <span class="nt">&lt;/webAppConfig&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>     <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Acima, além de adicionar o plugin a ser ativado, foi adicionado também, as configurações que serão lidas pelo WebContext.</p>

<h3>Adicionando dependências dos artefatos para o ActiveMQ</h3>

<p>Para o ActiveMQ, é necessário adicionar a entrada abaixo do core, que será utilizada como <!--more-->
dependência:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;dependency&gt;
</span><span class='line'>       &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;
</span><span class='line'>       &lt;artifactId&gt;activemq-core&lt;/artifactId&gt;
</span><span class='line'>       &lt;version&gt;5.0.0&lt;/version&gt;
</span><span class='line'>&lt;/dependency&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Essa entrada apenas disponibilizará as bibliotecas necessárias para criar as conexões e sessões.</p>

<p>Instalando binários do ActiveMQ
Para instalar os binários do ActiveMQ:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://activemq.apache.org/path/tofile/apache-activemq-x.x.x-bin.tar.gz
</span><span class='line'><span class="nb">cd</span> <span class="o">[</span>diretorio_instalacao<span class="o">]</span>
</span><span class='line'>tar zxvf activemq-x.x.x-bin.tar.gz
</span></code></pre></td></tr></table></div></figure>


<p>Iniciando ActiveMQ
Para iniciar o daemon após instalação:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> <span class="o">[</span>diretorio_instalacao<span class="o">]</span>/bin
</span><span class='line'>./activemq start
</span></code></pre></td></tr></table></div></figure>


<p>Para acessar o painel de administrador:</p>

<p><a href="http://127.0.0.1:8161/admin/">http://127.0.0.1:8161/admin/</a></p>

<p>Configurando recursos JNDI para o Jetty
No caminho especificado nas configurações do Plugin do Jetty, no arquivo pom, é necessário configurar os recursos do JNDI para o específico webapp, exemplo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;!DOCTYPE Configure PUBLIC &quot;-//Mort Bay Consulting//DTD Configure//EN&quot;</span>
</span><span class='line'><span class="cp">&quot;http://jetty.mortbay.org/configure.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;Configure</span> <span class="na">id=</span><span class="s">&#39;jms-webapp-wac&#39;</span> <span class="na">class=</span><span class="s">&quot;org.eclipse.jetty.webapp.WebAppContext&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;New</span> <span class="na">id=</span><span class="s">&quot;connectionFactory&quot;</span> <span class="na">class=</span><span class="s">&quot;org.eclipse.jetty.plus.jndi.Resource&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Ref</span> <span class="na">id=</span><span class="s">&#39;jms-webapp-wac&#39;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>jms/ConnectionFactory<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>tcp://127.0.0.1:61616<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/New&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/New&gt;</span>
</span><span class='line'>  <span class="nt">&lt;New</span> <span class="na">id=</span><span class="s">&quot;fooQueue&quot;</span> <span class="na">class=</span><span class="s">&quot;org.eclipse.jetty.plus.jndi.Resource&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>jms/FooQueue<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.command.ActiveMQQueue&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>FOO.QUEUE<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/New&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/New&gt;</span>
</span><span class='line'><span class="nt">&lt;/Configure&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Onde:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.ActiveMQConnectionFactory&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>tcp://127.0.0.1:61616<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'><span class="nt">&lt;/New&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deve ser o IP e porta onde o daemon do ActiveMQ está escutando.</p>

<p>E onde:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;New</span> <span class="na">class=</span><span class="s">&quot;org.apache.activemq.command.ActiveMQQueue&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Arg&gt;</span>FOO.QUEUE<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'><span class="nt">&lt;/New&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>É a fila configurada no painel ou linha de comando do ActiveMQ.</p>

<p>Mapeando os recursos do ActiveMQ dentro do Container
No arquivo de configuração web.xml, dentro do <strong>WEB-INF</strong> da aplicação, deverá ser mapeado referências para
utilização do ActiveMQ:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resource-ref</span> <span class="na">id=</span><span class="s">&quot;ResourceRef_1291169365479&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;description&gt;</span>JMS Connection<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-ref-name&gt;</span>jms/ConnectionFactory<span class="nt">&lt;/res-ref-name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-type&gt;</span>javax.jms.ConnectionFactory<span class="nt">&lt;/res-type&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-auth&gt;</span>Container<span class="nt">&lt;/res-auth&gt;</span>
</span><span class='line'>        <span class="nt">&lt;res-sharing-scope&gt;</span>Shareable<span class="nt">&lt;/res-sharing-scope&gt;</span>
</span><span class='line'><span class="nt">&lt;/resource-ref&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;message-destination-ref&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-ref-name&gt;</span>jms/FooQueue<span class="nt">&lt;/message-destination-ref-name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-type&gt;</span>javax.jms.Queue<span class="nt">&lt;/message-destination-type&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-usage&gt;</span>Produces<span class="nt">&lt;/message-destination-usage&gt;</span>
</span><span class='line'>        <span class="nt">&lt;message-destination-link&gt;</span>jms/FooQueue<span class="nt">&lt;/message-destination-link&gt;</span>
</span><span class='line'><span class="nt">&lt;/message-destination-ref&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reset All Commits From Repository Git]]></title>
    <link href="http://di0.github.io/blog/2015/09/23/reset-all-commits-from-repository-git/"/>
    <updated>2015-09-23T23:26:40-03:00</updated>
    <id>http://di0.github.io/blog/2015/09/23/reset-all-commits-from-repository-git</id>
    <content type="html"><![CDATA[<p>Para remover todos os históricos de commits e iniciar novamente o commit inicial, são dados os seguintes passos:</p>

<p>1) Remover o .git do repositorio(local) que deseja resetar</br>
2) Recriar o artefato do banco de dados git, seguindo os passos abaixo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>Project
</span><span class='line'><span class="nv">$ </span>git init
</span><span class='line'>// crie alguns arquivos <span class="o">(</span> eu clonei <span class="k">do</span> SVN, em vez disso <span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Initial commit&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3) Realizar o push para o servidor remoto<strong>(troque a url pela url do repositorio alvo)</strong>, forçando a sobreescrita:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote add origin &lt;url&gt;
</span><span class='line'><span class="nv">$ </span>git push ‐‐force ‐‐set-upstream origin master
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
