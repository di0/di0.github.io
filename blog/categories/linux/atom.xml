<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Developer's Lab]]></title>
  <link href="http://di0.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://di0.github.io/"/>
  <updated>2020-02-16T02:26:16-03:00</updated>
  <id>http://di0.github.io/</id>
  <author>
    <name><![CDATA[Diogo Pinto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PCI Bus Error]]></title>
    <link href="http://di0.github.io/blog/2020/02/15/pci-bus-error/"/>
    <updated>2020-02-15T19:37:37-03:00</updated>
    <id>http://di0.github.io/blog/2020/02/15/pci-bus-error</id>
    <content type="html"><![CDATA[<p>The CPU communicates with the PCIe bus controller through transaction layer packets (TLPs). The hardware detects when failure occurred, and the Linux kernel reports that as messages.
The mentioned error <strong><em>pcieport XXXX:YY:ZZ.Z: AER: Corrected error received</em></strong>, is one of those cases&hellip; <!--more--></p>

<p style="border:3px; border-style:solid; border-color:#eead2d; padding: 1em;"><strong>Note about PCI-id</strong><br><br>
The four first hexadecimal id xxxx represents the Vendor ID and the four last hexadecimal id, represents the Device ID. Actually there is also
some sub-vendor-id, sub-vendor-id(to identify the computer/vendor implementation), pci function and class...(https://wiki.debian.org/HowToIdentifyADevice/PCI#references).
</p>




<h3 style="color:navy;">The lspci Tool</h3>


<p>The lspci(list Peripheral Component Interconnect) utility, show us the devices connected to any pci compatible bus. e.g:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>lspci -tv
-<span class="o">[</span>0000:00<span class="o">]</span>-+-00.0  Intel Corporation Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers
+-02.0  Intel Corporation HD Graphics 620
  +-04.0  Intel Corporation Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Thermal Subsystem
     +-14.0  Intel Corporation Sunrise Point-LP USB 3.0 xHCI Controller
       +-14.2  Intel Corporation Sunrise Point-LP Thermal subsystem
          +-16.0  Intel Corporation Sunrise Point-LP CSME HECI <span class="c">#1</span>
              +-17.0  Intel Corporation Sunrise Point-LP SATA Controller <span class="o">[</span>AHCI mode<span class="o">]</span>
                 +-1c.0-<span class="o">[</span>01<span class="o">]</span><span class="p">&amp;</span>ndash<span class="p">;</span>
                  +-1c.5-<span class="o">[</span>02<span class="o">]</span><span class="p">&amp;</span>mdash<span class="p">;</span>-00.0  Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller
                     +-1d.0-<span class="o">[</span>03<span class="o">]</span><span class="p">&amp;</span>mdash<span class="p">;</span>-00.0  Realtek Semiconductor Co., Ltd. RTL8723BE PCIe Wireless Network Adapter
                    +-1f.0  Intel Corporation Sunrise Point LPC Controller/eSPI Controller
                       +-1f.2  Intel Corporation Sunrise Point-LP PMC
                          +-1f.3  Intel Corporation Sunrise Point-LP HD Audio
                         -1f.4  Intel Corporation Sunrise Point-LP SMBus</code></pre></div></p>

<p>According output command above, we can get the same(even then, Realtek Semiconductor Co., Ltd. RTL8723BE PCIe Wireless Network Adapter) id device that
causing the error of PCI Bus output log messages. i.e:</p>

<p><strong><em>[ 5315.986588] pcieport 0000:00:1c.0: AER: Corrected error received: id=01d0</em></strong></p>

<p>The workaround to solve that problem is adding such these kernel parameters:</p>

<p><strong>pci=nomsi</strong>
<br>
<strong>pci=noaer</strong></p>

<p>where <strong>nomsi</strong> meaning <strong>No Message Signaled Interrupts</strong> and <strong>noaer</strong> meaning <strong>No Advanced Error Reporting</strong>.</p>

<p>In short, both disable and stop the messages from showing output. The following example, show us how to configure theses parameters.</p>

<p>Edit the /etc/default/grub file and add pci=noaer and pci=nomsi to the line starting with the GRUB_CMDLINE_LINUX_DEFAULT:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">GRUB_CMDLINE_LINUX_DEFAULT</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span>quiet splash <span class="nv">reboot</span><span class="o">=</span>efi,pci <span class="nv">pci</span><span class="o">=</span>nomsi,noaer <span class="nv">pcie_aspm</span><span class="o">=</span>off<span class="p">&amp;</span>rdquo<span class="p">;</span></code></pre></div></p>

<p style="border:3px; border-style:solid; border-color:#eead2d; padding: 1em;"><strong>Note:</strong><br><br>
pci=nomsi and noaer, do not remove the error but just hide it into the error log. In this particular case, we add <mark>pcie_aspm=off</mark> option. This will increase the PCIe Active State
Power Management consumption of machine as it disables the power savings. More details(https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/power_management_guide/aspm).
</p>


<p>So, update the grub with the new parameters:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>update grub</code></pre></div></p>

<p>next, reboot the SO.</p>

<p>If it do not works, keep the kernel&rsquo;s parameters setting previously and run the following command:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>grub-mkconfig -o /boot/grub/grub.cfg
<span class="nv">$ </span>update-grub
<span class="nv">$ </span>reboot</code></pre></div></p>

<p>Remember yourself check logs files size in /var/log directory, such as messages.log file, kern.log file, and syslog file. Because the related error PCI generated
logs, these files can become increase pretty bigger.</p>

<p>You can fix them:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>df -h
Filesystem  Size    Used    Available   Use%    Mounted on
/dev/sda1        37G    37G     <span class="m">0</span>           100%        /var</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">echo</span> <span class="p">&amp;</span>ldquo<span class="p">;&amp;</span>rdquo<span class="p">;</span> &gt; /var/log/kern.log
<span class="nv">$ </span><span class="nb">echo</span> <span class="p">&amp;</span>ldquo<span class="p">;&amp;</span>rdquo<span class="p">;</span> &gt; /var/log/syslog
<span class="nv">$ </span><span class="nb">echo</span> <span class="p">&amp;</span>ldquo<span class="p">;&amp;</span>rdquo<span class="p">;</span> &gt; /var/log/messages</code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Locking User Account Linux]]></title>
    <link href="http://di0.github.io/blog/2018/05/11/locking-user-account-linux/"/>
    <updated>2018-05-11T12:48:04-03:00</updated>
    <id>http://di0.github.io/blog/2018/05/11/locking-user-account-linux</id>
    <content type="html"><![CDATA[<p>The following command will lock an user <!--more--> account:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">passwd <span class="p">&amp;</span>ndash<span class="p">;</span>lock foo</code></pre></div></p>

<p>or simply</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">passwd -l foo</code></pre></div></p>

<p>Remember that, you should run the above command as root account.</p>

<p>If you want unlocking the account foo, just type the <strong>passwd</strong> command with <strong>-u</strong> or <strong>&ndash;unlock</strong> parameter, e.g:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">passwd <span class="p">&amp;</span>ndash<span class="p">;</span>unlock foo</code></pre></div></p>

<p>or simply</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">passwd -u foo</code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disable IPv6 on Linux]]></title>
    <link href="http://di0.github.io/blog/2018/04/30/disable-ipv6-on-linux/"/>
    <updated>2018-04-30T18:19:07-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/30/disable-ipv6-on-linux</id>
    <content type="html"><![CDATA[<p><strong>IPv6</strong> protocol is not always available in the local area network(lan), to avoid your DHCP connection configure IPv6 in
your network card device, you can disable it through least <!--more--> two ways:</p>

<h3 style="color: #d3d378;font-size 8px">Command line</h3>


<p><strong>sysctl</strong> command is an Linux command that configures kernel parameters at runtime. You can display all
values currently available, typing <strong>sysctl -a</strong>. More details, see <em>sysctl manual page</em>.</p>

<p>Regarding configuration, with super admin user, type:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sysctl -w net.ipv6.conf.all.disable_ipv6<span class="o">=</span>1
sysctl -w sysctl -w net.ipv6.conf.default.disable_ipv6<span class="o">=</span>1</code></pre></div></p>

<p>If you want re-enable IPv6, issue the following commands:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sysctl -w net.ipv6.conf.all.disable_ipv6<span class="o">=</span>0
sysctl -w net.ipv6.conf.default.disable_ipv6<span class="o">=</span>0</code></pre></div></p>

<h3 style="color: #d3d378;font-size 8px">File configuration(Debian based distro)</h3>


<p>Another way, is through of the file configuration located under directory <strong>/etc/</strong>.
The file name is <strong>sysctl.conf</strong>, which is a simple file containing sysctl values to be read in and set by <strong>sysctl</strong>.</p>

<p>With super admin user, edit the file <span style="color:blue;font-weight:bold">/etc/sysctl.conf</span> and add the following lines:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">net.ipv6.conf.all.disable_ipv6 <span class="o">=</span> 1
net.ipv6.conf.default.disable_ipv6 <span class="o">=</span> 1
net.ipv6.conf.lo.disable_ipv6 <span class="o">=</span> 1</code></pre></div></p>

<p>To disable, just remove the above lines.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Show Only File Name With Grep Command]]></title>
    <link href="http://di0.github.io/blog/2018/04/30/grep-command-show-only-file-name/"/>
    <updated>2018-04-30T00:48:26-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/30/grep-command-show-only-file-name</id>
    <content type="html"><![CDATA[<p>With <strong>grep</strong> and <strong>cut</strong> delimiter command we can get only file name where the occurrence of the input match. Below an<!--more-->
example:</p>

<pre><code class="bash">grep -Rn "foo" * | cut -f1 -d:
</code></pre>

<p><strong>output</strong></p>

<p><img class="rigth" src="/images/output_grep_cut.jpeg" width="1800" height="1800" title="&lsquo;output grep&rsquo;" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Replace With Stream Editor(AKA Sed)]]></title>
    <link href="http://di0.github.io/blog/2018/04/28/replace-with-stream-editor-aka-sed/"/>
    <updated>2018-04-28T14:08:18-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/28/replace-with-stream-editor-aka-sed</id>
    <content type="html"><![CDATA[<p>The <strong>sed</strong> is command-line utility editor, which filtering and transforming text. Below an example of how it works <!--more--> replacement order:</p>

<pre><code class="bash">sed -i 's/input/replacement/g' some_file
</code></pre>

<p><em>where:</em></p>

<p><li> <strong> <em>i</em> </strong> = &ndash;in-place, edit <strong>file.txt</strong> and save it.</li>
<li> <strong> <em>s</em> </strong> = substitute statement.</li>
<li> <strong> <em>input</em> </strong> = original match case.</li>
<li> <strong> <em>replacement</em> </strong> = matched replacement it with.</li>
<li> <strong> <em>g</em> </strong> = global(replace all occurrence, instead of first occurrence).</li>
<li> <strong> <em>some_file</em> </strong> = some target file.</li></p>
]]></content>
  </entry>
  
</feed>
