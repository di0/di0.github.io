<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dio's Blog]]></title>
  <link href="http://di0.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://di0.github.io/"/>
  <updated>2017-11-09T02:55:34-02:00</updated>
  <id>http://di0.github.io/</id>
  <author>
    <name><![CDATA[Diogo Pinto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prevent SSH Connection Time Out]]></title>
    <link href="http://di0.github.io/blog/2016/02/24/avoid-ssh-connection-timeout/"/>
    <updated>2016-02-24T01:36:18-03:00</updated>
    <id>http://di0.github.io/blog/2016/02/24/avoid-ssh-connection-timeout</id>
    <content type="html"><![CDATA[<p>Cliente SSH’s, são automaticamente desconectado do servidor SSH, quando um tempo limite de conexão é alcançado, como mostrado abaixo:</p>

<p>Read from remote host foo.com: Connection reset by peer
Connection to foo.com closed.</p>

<p>Para evitar que o cliente perda conexão com o servidor SSH, por timeout, uma das soluções abaixo são avaliadas:</p>

<p>Configuração no servidor</p>

<pre><code class="bash">TCPKeepAlive no
ClientAliveInterval 30
ClientAliveCountMax 100
</code></pre>

<p><strong>TPCKeepAlive ( KeepAlive )</strong>, verifica se deve ou não, realizar a verificação se o Socket via cliente e servidor, ainda encontra-se
aberto. Um pacote cru, é enviado e se for recebido, significa que a conexão ainda ativa. A opção padrão para a maioria dos caso, é “YES”.</p>

<p><strong>ClientAliveInterval</strong> Numero do intervalo em segundos em que o servidor, irá enviar um pacote nulo, conforme descrito
anteriormente, ao cliente. O padrão para a maioria dos casos, é zero.</p>

<p><strong>ClientAliveCountMax 100</strong> Número máximo de vezes, que será enviado o pacote antes de desconectar do cliente. O padrão para a maioria dos casos, são três.</p>

<p>Reiniciando o servidor para aplicar as configurações modificadas:</p>

<pre><code class="bash">$ sudo service sshd restart
</code></pre>

<p>Configuração no Cliente</p>

<p>Se acaso, não for <!--more--> possível realizar os procedimentos anteriores no servidor, devido a permissão, no lado do cliente, é possível realizar o seguinte procedimento:</p>

<p>Se para todos os usuários do sistema, adicionar aqui</p>

<p><strong> /etc/ssh/ssh_config </strong></p>

<p>Ou para um usuário específico, adicionar aqui</p>

<p><strong> ~/.ssh/config </strong></p>

<p>A seguinte configuração:</p>

<p><strong>ServerAliveInterval 30</strong></p>

<p>Configuração no cliente – linha de comando
E por fim, a outra opção, seria a manual, via linha de comando, através da opção (-o)</p>

<pre><code class="bash">$ ssh -o ServerAliveInterval=30 user@foo.com
</code></pre>
]]></content>
  </entry>
  
</feed>
