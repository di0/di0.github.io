<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dio's Blog]]></title>
  <link href="http://di0.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://di0.github.io/"/>
  <updated>2018-03-17T02:15:05-03:00</updated>
  <id>http://di0.github.io/</id>
  <author>
    <name><![CDATA[Diogo Pinto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Searching Exact Word With Vi Editor]]></title>
    <link href="http://di0.github.io/blog/2018/01/31/searching-exact-word-with-vi-editor/"/>
    <updated>2018-01-31T15:41:24-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/31/searching-exact-word-with-vi-editor</id>
    <content type="html"><![CDATA[<p>Below I explain you how search a exact word in VI(M), what you just need to do, is to put there on between <!--more--> regular expression
\&lt; and \>, for example:</p>

<pre><code class="bash">/\&lt;FOO\&gt;
</code></pre>

<p>It will match only words whose name is <strong>FOO</strong>, rather than, <strong>FOOBAR</strong>, <strong>BARFOO</strong>, etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Determining Symbolic Links Java With Update-alternatives Command]]></title>
    <link href="http://di0.github.io/blog/2018/01/17/determining-symbolic-links-java-with-update-alternatives-command/"/>
    <updated>2018-01-17T16:01:01-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/17/determining-symbolic-links-java-with-update-alternatives-command</id>
    <content type="html"><![CDATA[<p>With the utility <strong>update-alternatives</strong>, is possible you set versions of the Java installed in your Operating System Linux(which supports it),
without need add or <!--more--> remove symbolic link manually. To list one or more Java version available in target system, you can just typing the
command <strong>update-alternatives</strong>, adding the argument <strong>--list</strong>, together with name of the symlink(Symbolic Link) desired. For example:</p>

<pre><code class="bash">update-alternatives --list java
</code></pre>

<p>Where <strong>java</strong> is the name of the symbolic link.</p>

<p>Is possible too, you to install a new version, case it hasn&rsquo;t on the list of the <strong>update-alternatives</strong>. To install a new version of the Java on the
list, you just need use the parameter <strong>--install</strong>, setting the following arguments:</p>

<pre><code>1) The value properly of the desired symbolic link name.
2) The full path of the binary Java.
3) Lastly, specifying the level of priority associated with it.
</code></pre>

<p>For example:</p>

<pre><code class="bash">update-alternatives --install /usr/bin/java java /opt/jdk1.8/bin/java 1
</code></pre>

<p>After typing the command above, you can use the parameter <strong>--list</strong> to confirm the update:</p>

<pre><code class="bash">update-alternatives --list java
</code></pre>

<p>To change to a new version, execute <strong>update-alternatives</strong> with parameter <strong>--config</strong>, it will show a menu to you choice your option through
interactive way form:</p>

<pre><code class="bash">update-alternatives --config java
</code></pre>

<p>There is another non-interactive way to you choice the version, just setting with parameter <strong>--set</strong> or <strong>-s</strong>, instead of <strong>--config</strong>, as below:</p>

<pre><code class="bash">sudo update-alternatives --set java /opt/jdk1.8/bin/java
</code></pre>

<p>For more info, enter with:</p>

<pre><code class="bash">man update-alternatives
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grep - Exclude Directories and Files From Recursive Searches]]></title>
    <link href="http://di0.github.io/blog/2016/08/21/grep-exclude-directories-and-files-from-recursive-searches/"/>
    <updated>2016-08-21T04:17:15-03:00</updated>
    <id>http://di0.github.io/blog/2016/08/21/grep-exclude-directories-and-files-from-recursive-searches</id>
    <content type="html"><![CDATA[<p>Simplesmente, usando o parâmetro <strong>--exclude-dir</strong> para excluir <!--more--> diretórios
e/ou <strong>--exclude</strong> para excluir arquivos ou extensões de arquivos, tal como exemplo:</p>

<pre><code class="bash">grep -r [Win] --color --exclude-dir=test --exclude-dir=target \
--exclude-dir=bin --exclude=\*.xml --exclude=\*.svn "pesquisa" .
</code></pre>

<p>Ou ainda:</p>

<pre><code class="bash">$ grep -r [Win] --color --exclude-dir={test,target,bin} \
--exclude={*.xml,*.svn} "pesquisa" .
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove Names Duplicates With Sort Command]]></title>
    <link href="http://di0.github.io/blog/2016/05/20/remove-names-duplicates-with-sort-command/"/>
    <updated>2016-05-20T19:37:51-03:00</updated>
    <id>http://di0.github.io/blog/2016/05/20/remove-names-duplicates-with-sort-command</id>
    <content type="html"><![CDATA[<p>É possível remover nomes duplicados de uma saída padrão com o utilitário <!--more--> <strong>sort</strong>. Exemplos:</p>

<pre><code class="bash">sort -u foo.txt
</code></pre>

<p>ou</p>

<pre><code class="bash">sort file.txt | uniq
</code></pre>

<p>É possível também, imprimir somente os valores repetidos, em vez de ocultá-los, segue:</p>

<pre><code class="bash">sort file.txt | uniq -d
</code></pre>

<p>Uma outra forma de realizar a mesma tarefa que faz o comando <strong>sort</strong> é a de usar o comando
<strong>awk</strong>, conforme exemplo abaixo:</p>

<pre><code class="bash">$ awk '!a[$0]++' foo.txt
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prevent SSH Connection Time Out]]></title>
    <link href="http://di0.github.io/blog/2016/02/24/avoid-ssh-connection-timeout/"/>
    <updated>2016-02-24T01:36:18-03:00</updated>
    <id>http://di0.github.io/blog/2016/02/24/avoid-ssh-connection-timeout</id>
    <content type="html"><![CDATA[<p>Conexões estabelecidas de clientes SSHs, são automaticamente desconectadas do servidor SSH quando um <!--more--> tempo limite de conexão é alcançado, como mostrado pela mensagem abaixo:</p>

<p><strong> <em>Read from remote host foo.com: Connection reset by peer</em> </strong>
<strong> <em>Connection to foo.com closed.</em> </strong></p>

<p>Para evitar que o cliente perca conexão com o servidor SSH, por timeout, uma das soluções abaixo são avaliadas:</p>

<p><del>Configuração no servidor</del></p>

<pre><code class="bash">TCPKeepAlive no
ClientAliveInterval 30
ClientAliveCountMax 100
</code></pre>

<p><strong>TPCKeepAlive ( KeepAlive )</strong>, verifica se deve ou não, realizar a verificação se o Socket via cliente e servidor, ainda encontra-se
aberto. Um pacote cru, é enviado e se for recebido, significa que a conexão ainda ativa. A opção padrão para a maioria dos caso, é “YES”.</p>

<p><strong>ClientAliveInterval</strong> Numero do intervalo em segundos em que o servidor, irá enviar um pacote nulo, conforme descrito
anteriormente, ao cliente. O padrão para a maioria dos casos, é zero.</p>

<p><strong>ClientAliveCountMax 100</strong> Número máximo de vezes, que será enviado o pacote antes de desconectar do cliente. O padrão para a maioria dos casos, são três.</p>

<p>Reiniciando o servidor para aplicar as configurações modificadas:</p>

<pre><code class="bash">$ sudo service sshd restart
</code></pre>

<p><del>Configuração no Cliente</del></p>

<p>Se acaso, não for <!--more--> possível realizar os procedimentos anteriores no servidor, devido a permissão, no lado do cliente, é possível realizar o seguinte procedimento:</p>

<p>Se para todos os usuários do sistema, adicionar aqui</p>

<p><strong> /etc/ssh/ssh_config </strong></p>

<p>Ou para um usuário específico, adicionar aqui</p>

<p><strong> ~/.ssh/config </strong></p>

<p>A seguinte configuração:</p>

<p><strong>ServerAliveInterval 30</strong></p>

<p>Configuração no cliente – linha de comando
E por fim, a outra opção, seria a manual, via linha de comando, através da opção (-o)</p>

<pre><code class="bash">$ ssh -o ServerAliveInterval=30 user@foo.com
</code></pre>
]]></content>
  </entry>
  
</feed>
