<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Developer's Lab]]></title>
  <link href="http://di0.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://di0.github.io/"/>
  <updated>2018-04-30T19:47:55-03:00</updated>
  <id>http://di0.github.io/</id>
  <author>
    <name><![CDATA[Diogo Pinto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Disable IPv6 on Linux]]></title>
    <link href="http://di0.github.io/blog/2018/04/30/disable-ipv6-on-linux/"/>
    <updated>2018-04-30T18:19:07-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/30/disable-ipv6-on-linux</id>
    <content type="html"><![CDATA[<p><strong>IPv6</strong> protocol is not always available in the local area network(lan), to avoid your DHCP connection configure IPv6 in
your network card device, you can disable it through least <!--more--> two ways:</p>

<h4><u>Command line</u></h4>


<p><strong>sysctl</strong> command is an Linux command that configures kernel parameters at runtime. You can display all
values currently available, typing <strong>sysctl -a</strong>. More details, see <em>sysctl manual page</em>.</p>

<p>Regarding configuration, with super admin user, type:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sysctl -w net.ipv6.conf.all.disable_ipv6<span class="o">=</span>1
sysctl -w sysctl -w net.ipv6.conf.default.disable_ipv6<span class="o">=</span>1</code></pre></div></p>

<p>If you want re-enable IPv6, issue the following commands:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sysctl -w net.ipv6.conf.all.disable_ipv6<span class="o">=</span>0
sysctl -w net.ipv6.conf.default.disable_ipv6<span class="o">=</span>0</code></pre></div></p>

<h4><u>File configuration(Debian based distro)</u></h4>


<p>Another way, is through of the file configuration located under directory <strong>/etc/</strong>.
The file name is <strong>sysctl.conf</strong>, which is a simple file containing sysctl values to be read in and set by <strong>sysctl</strong>.</p>

<p>With super admin user, edit the file /etc/sysctl.conf and add the following lines:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">net.ipv6.conf.all.disable_ipv6 <span class="o">=</span> 1
net.ipv6.conf.default.disable_ipv6 <span class="o">=</span> 1
net.ipv6.conf.lo.disable_ipv6 <span class="o">=</span> 1</code></pre></div></p>

<p>To disable, just remove the above lines.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Show Only File Name With Grep Command]]></title>
    <link href="http://di0.github.io/blog/2018/04/30/grep-command-show-only-file-name/"/>
    <updated>2018-04-30T00:48:26-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/30/grep-command-show-only-file-name</id>
    <content type="html"><![CDATA[<p>With <strong>grep</strong> and <strong>cut</strong> delimiter command we can get only file name where the occurrence of the input match. Bellow an<!--more-->
example:</p>

<pre><code class="bash">grep -Rn "foo" * | cut -f1 -d:
</code></pre>

<p><strong>output</strong></p>

<p><img class="rigth" src="/images/output_grep_cut.jpeg" width="1800" height="1800" title="&lsquo;output grep&rsquo;" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Replace With Stream Editor(AKA Sed)]]></title>
    <link href="http://di0.github.io/blog/2018/04/28/replace-with-stream-editor-aka-sed/"/>
    <updated>2018-04-28T14:08:18-03:00</updated>
    <id>http://di0.github.io/blog/2018/04/28/replace-with-stream-editor-aka-sed</id>
    <content type="html"><![CDATA[<p>The <strong>sed</strong> is command-line utility editor, which filtering and transforming text. Bellow an example of how works <!--more--> replacement order:</p>

<pre><code class="bash">sed -i 's/input/replacement/g' some_file
</code></pre>

<p><em>where:</em></p>

<p><li> <strong> <em>i</em> </strong> = &ndash;in-place, edit <strong>file.txt</strong> and save it.</li>
<li> <strong> <em>s</em> </strong> = substitute statement.</li>
<li> <strong> <em>input</em> </strong> = original match case.</li>
<li> <strong> <em>replacement</em> </strong> = matched replacement it with.</li>
<li> <strong> <em>g</em> </strong> = global(replace all occurrence, instead of first occurrence).</li>
<li> <strong> <em>some_file</em> </strong> = some target file.</li></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Searching Exact Word With Vi Editor]]></title>
    <link href="http://di0.github.io/blog/2018/01/31/searching-exact-word-with-vi-editor/"/>
    <updated>2018-01-31T15:41:24-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/31/searching-exact-word-with-vi-editor</id>
    <content type="html"><![CDATA[<p>Below I explain you how search an exact word in VI(M), what you just need to do, is to put there on between <!--more--> regular expression
\&lt; and \>, for example:</p>

<pre><code class="bash">/\&lt;FOO\&gt;
</code></pre>

<p>It will match only words whose name is <strong>FOO</strong>, rather than, <strong>FOOBAR</strong>, <strong>BARFOO</strong>, etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Determining Symbolic Links Java With Update-alternatives Command]]></title>
    <link href="http://di0.github.io/blog/2018/01/17/determining-symbolic-links-java-with-update-alternatives-command/"/>
    <updated>2018-01-17T16:01:01-02:00</updated>
    <id>http://di0.github.io/blog/2018/01/17/determining-symbolic-links-java-with-update-alternatives-command</id>
    <content type="html"><![CDATA[<p>With the utility <strong>update-alternatives</strong>, is possible you set versions of the Java installed in your Operating System Linux(which supports it),
without need add or <!--more--> remove symbolic link manually. To list one or more Java version available in target system, you can just typing the
command <strong>update-alternatives</strong>, adding the argument <strong>--list</strong>, together with name of the symlink(Symbolic Link) desired. For example:</p>

<pre><code class="bash">update-alternatives --list java
</code></pre>

<p><img class="rigth" src="/images/output_update_alternative_list.jpeg" width="1800" height="1800" title="&lsquo;output perl group&rsquo;" ></p>

<p>Where <strong>java</strong> is the name of the symbolic link.</p>

<p>Is possible too, you to install a new version, case it hasn&rsquo;t on the list of the <strong>update-alternatives</strong>. To install a new version of the Java on the
list, you just need use the parameter <strong>--install</strong>, setting the following arguments:</p>

<p><ol>
    <li> The value properly of the desired symbolic link name. </li>
    <li> The full path of the binary Java. </li>
    <li> Lastly, specifying the level of priority associated with it. </li>
<ol></p>

<p>For example:</p>

<pre><code class="bash">update-alternatives --install /usr/bin/java java /opt/jdk1.8/bin/java 1
</code></pre>

<p>After typing the command above, you can use the parameter <strong>--list</strong> to confirm the update:</p>

<pre><code class="bash">update-alternatives --list java
</code></pre>

<p>To change to a new version, execute <strong>update-alternatives</strong> with parameter <strong>--config</strong>, it will show a menu to you choice your option through
interactive way form:</p>

<pre><code class="bash">update-alternatives --config java
</code></pre>

<p><img class="rigth" src="/images/output_update_alternatives_config.jpeg" width="1800" height="1800" title="&lsquo;output perl group&rsquo;" ></p>

<p>There is another non-interactive way to you choice the version, just setting with parameter <strong>--set</strong> or <strong>-s</strong>, instead of <strong>--config</strong>, as below:</p>

<pre><code class="bash">sudo update-alternatives --set java /opt/jdk1.8/bin/java
</code></pre>

<p>For more info, enter with:</p>

<pre><code class="bash">man update-alternatives
</code></pre>
]]></content>
  </entry>
  
</feed>
